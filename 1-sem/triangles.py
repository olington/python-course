# Определить длины сторон треугольника по заданным координатам,
# найти также биссектрису, проведенную из наименьшего угла треугольника
# Определить, является ли треугольник равносторонним.
# Далее ввести координаты одной точки и определить, находится ли она
# внутри треугольника, если да, то найти расстояние до
# ближайшей стороны или ее продолжения.
# Кондрашова
# x1, y1, x2, y2, x3, y3 - координаты вершин треугольника
# x, y - координаты точки D
# AB, BC, AC - стороны треугольника
# bis  - биссектриса, проведенная из наименьшего угла
# p, p1 p2 p3 - полупериметр
# s, s1, s2, s3 - площадь
# h - расстояние от точки до ближайшей прямой

x1, y1 = map(float, input("Введите координаты точки A: ").split())
x2, y2 = map(float, input("Введите координаты точки B: ").split())
x3, y3 = map(float, input("Введите координаты точки C: ").split())
print()

from math import sqrt

ab = sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2)
bc = sqrt((x3 - x2) ** 2 + (y3 - y2) ** 2)
ac = sqrt((x3 - x1) ** 2 + (y3 - y1) ** 2)

if ab > 0 and bc > 0 and ac > 0 and \
   ab + bc > ac and ab + ac > bc and ac + bc > ab:
    print("Треугольник существует",
          "AB = {:5.4f} \n"
          "BC = {:5.4f} \n"
          "AC = {:5.4f}".format(ab, bc, ac), sep = "\n")
    print()

    if ab == bc == ac:
        print("Треугольник является равносторонним")
        print()
    else:
        print("Треугольник не является равносторонним")
        print()

    p = (ab + bc + ac) / 2
    if ab < bc and ab < ac:
        bis = 2 * sqrt(bc * ac * p * (p - ab)) / (bc + ac)
    elif bc < ab and bc < ac:
        bis = 2 * sqrt(ab * ac * p * (p - bc)) / (ab + ac)
    else:
        bis = 2 * sqrt(ab * bc * p * (p - ac)) / (ab + bc)
    print("Длина биссектрисы, проведенной из наименьшего угла: "
          "{:5.4f}".format(bis))
    print()

    x, y = map(float, input("Введите координаты точки: ").split())
    if ((x1 - x) * (y2 - y1) - (x2 - x1) * (y1 - y)) > 0 and \
    ((x2 - x) * (y3 - y2) - (x3 - x2) * (y2 - y)) > 0 and \
    ((x3 - x) * (y1 - y3) - (x1 - x3) * (y3 - y)) > 0 or \
    ((x1 - x) * (y2 - y1) - (x2 - x1) * (y1 - y)) < 0 and \
    ((x2 - x) * (y3 - y2) - (x3 - x2) * (y2 - y)) < 0 and \
    ((x3 - x) * (y1 - y3) - (x1 - x3) * (y3 - y)) < 0:
        ad = sqrt((x1 - x) ** 2 + (y1 - y) ** 2)
        bd = sqrt((x2 - x) ** 2 + (y2 - y) ** 2)
        cd = sqrt((x3 - x) ** 2 + (y3 - y) ** 2)
        s = sqrt(p* ((p - ab) * (p - bc) * (p - ac)))
        p1 = (ab + bd + ad) / 2
        s1 = sqrt(p1* ((p1 - ab) * (p1 - bd) * (p1 - ad)))
        p2 = (bd + cd + bc) / 2
        s2 = sqrt(p* ((p - bd) * (p - bc) * (p - cd)))
        p3 = (ad + cd + ac) / 2
        s3 = sqrt(p* ((p - ad) * (p - cd) * (p - ac)))
        if s1 < s2 and s1 < s3:
            h = (2 * s1) / ab
        elif s2 < s1 and s2 < s3:
            h = (2 * s2) / bc
        else:
            h = (2 * s3) / ac
        print("Точка находится внутри треугольника",
              "Расстояние до ближайшей прямой: {:5.4f}".format(h), sep = "\n")
    elif ((x1 - x) * (y2 - y1) - (x2 - x1) * (y1 - y)) == 0 or \
    ((x2 - x) * (y3 - y2) - (x3 - x2) * (y2 - y)) == 0 or \
    ((x3 - x) * (y1 - y3) - (x1 - x3) * (y3 - y)) == 0:
        print("Точка находится на стороне треугольника", \
              "Расстояние до ближайшей прямой равно 0", sep = "\n")
    else:
        print("Точка находится вне треугольника")
        
elif (x1 == x2 and y1 == y2):
    print("Треугольник не существует, т.к точки A и B совпадают")
elif (x1 == x3 and y1 == y3):
    print("Треугольник не существует, т.к точки A и C совпадают")
elif (x2 == x3 and y2 == y3):
    print("Треугольник не существует, т.к точки B и C совпадают")
elif x1 == x2 == x3 and y1 == y2 == y3:
    print("Треугольник не существует т.к все точки совпадают")
elif x1 == x2 == x3 or y1 == y2 == y3 \
     or (x1 + x2 + x3) == (y1 + y2 + y3):
    print("Треугольник не существует, т.к точки лежат на одной прямой")
